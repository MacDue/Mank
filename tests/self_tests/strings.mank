
test string_concat {
  hello := "Hello";
  world := "World";

  hello_world := hello + " " + world;
  assert!(str_equal(hello_world, "Hello World"));
}

test excessive_string_concat {
  my_str := "";
  for i in 0 .. 10000 {
    my_str += "to the moon!";
  }
  assert!(str_compare("to the moon", my_str) < 0);
  assert!(my_str.length > 10000);
}

test str_compare_is_lexicographic_order {
  # test cases stolen from: https://chortle.ccsu.edu/java5/Notes/chap92/ch92_2.html
  assert!(str_compare("Zebra", "ant") < 0);
  assert!(str_compare("Apple", "apple") < 0);
  assert!(str_compare("apple", "orange") < 0);
  assert!(str_compare("maple", "morning") < 0);
  assert!(str_compare("apple", "apple") == 0);
  assert!(str_compare("orange", "apple") > 0);
  assert!(str_compare("applecart", "apple") > 0);
  assert!(str_compare("albatross", "albany") > 0)
}

test char_to_string {
  # (pretty basic)
  assert!(str_equal("a", 'a' as str));
  assert!(str_equal("A", 'A' as str));
  assert!(str_equal("?", '?' as str));
}
